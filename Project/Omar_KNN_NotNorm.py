# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Awm0wKDMsZMpa1sfnDwTXZz02EB6YOXu
"""

import pandas as pds
from sklearn import linear_model
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import Normalizer
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
import numpy as np


#uploading files of test and train from drive
train = pds.read_csv('/content/drive/MyDrive/omartrain.csv')
test = pds.read_csv('/content/drive/MyDrive/omartest.csv')


#Using variable for labels
y = train.Cover_Type

#For functions
X = train.drop('Cover_Type', axis=1)

#Splitting The Data y 20% and x 80%
t_train, t_test, y_train, y_test = train_test_split(X, y,test_size=0.2)
# Proceeding without data normalization

#Applying KNN scikit multiclass identifier
KNN_f = KNeighborsClassifier(n_neighbors = 3)
KNN_f.fit(t_train, y_train)
Y_prediction = KNN_f.predict(t_test)
acc_KNN_f = round(KNN_f.score(t_train, y_train) * 100, 2)
print("  KNN Model  ")
print("KNN Accuracies =",round(acc_KNN_f,2,), "%")
print(Y_prediction.shape)
print(Y_prediction)

#Exporting Columns into dataframe
submission = pds.DataFrame({
        "Id": test["Id"],
        "Cover_Type": Y_prediction
    })
#Making a file
submission.to_csv('Omar_KNN_NotNorm.csv', index=False)
